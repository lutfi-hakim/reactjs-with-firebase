[{"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\index.js":"1","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\reportWebVitals.js":"2","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\containers\\pages\\App\\index.js":"3","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\firebase\\index.js":"4","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\containers\\pages\\Login\\index.js":"5","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\containers\\pages\\Dashboard\\index.js":"6","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\containers\\pages\\Register\\index.js":"7","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\redux\\index.js":"8","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\redux\\store\\index.js":"9","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\redux\\reducer\\index.js":"10","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\redux\\action\\index.js":"11","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\components\\atoms\\Button\\index.js":"12","D:\\try-with-firebase\\src\\index.js":"13","D:\\try-with-firebase\\src\\reportWebVitals.js":"14","D:\\try-with-firebase\\src\\config\\firebase\\index.js":"15","D:\\try-with-firebase\\src\\containers\\pages\\App\\index.js":"16","D:\\try-with-firebase\\src\\containers\\pages\\Dashboard\\index.js":"17","D:\\try-with-firebase\\src\\config\\redux\\index.js":"18","D:\\try-with-firebase\\src\\containers\\pages\\Login\\index.js":"19","D:\\try-with-firebase\\src\\containers\\pages\\Register\\index.js":"20","D:\\try-with-firebase\\src\\config\\redux\\store\\index.js":"21","D:\\try-with-firebase\\src\\config\\redux\\action\\index.js":"22","D:\\try-with-firebase\\src\\components\\atoms\\Button\\index.js":"23","D:\\try-with-firebase\\src\\config\\redux\\reducer\\index.js":"24"},{"size":583,"mtime":1607780325304,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":614,"mtime":1607853951349,"results":"28","hashOfConfig":"26"},{"size":595,"mtime":1607780097757,"results":"29","hashOfConfig":"26"},{"size":1818,"mtime":1608009309935,"results":"30","hashOfConfig":"26"},{"size":338,"mtime":1607792233735,"results":"31","hashOfConfig":"26"},{"size":2323,"mtime":1607939570889,"results":"32","hashOfConfig":"26"},{"size":24,"mtime":1607854520179,"results":"33","hashOfConfig":"26"},{"size":192,"mtime":1607875314543,"results":"34","hashOfConfig":"26"},{"size":758,"mtime":1607892710827,"results":"35","hashOfConfig":"26"},{"size":1515,"mtime":1608009636421,"results":"36","hashOfConfig":"26"},{"size":297,"mtime":1607882663539,"results":"37","hashOfConfig":"26"},{"size":544,"mtime":1608150286000,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":644,"mtime":1608033642000,"results":"41","hashOfConfig":"39"},{"size":608,"mtime":1608150092000,"results":"42","hashOfConfig":"39"},{"size":4208,"mtime":1608225376000,"results":"43","hashOfConfig":"39"},{"size":24,"mtime":1607854522000,"results":"44","hashOfConfig":"39"},{"size":2101,"mtime":1608150076000,"results":"45","hashOfConfig":"39"},{"size":1970,"mtime":1608150124000,"results":"46","hashOfConfig":"39"},{"size":192,"mtime":1607875316000,"results":"47","hashOfConfig":"39"},{"size":3568,"mtime":1608225374000,"results":"48","hashOfConfig":"39"},{"size":297,"mtime":1607882664000,"results":"49","hashOfConfig":"39"},{"size":902,"mtime":1608152836000,"results":"50","hashOfConfig":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1rzpvvk",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1adhnnb",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\index.js",[],["105","106"],"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\reportWebVitals.js",[],"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\containers\\pages\\App\\index.js",["107"],"import './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Dashboard from '../Dashboard';\nimport Login from '../Login';\nimport Register from '../Register';\nimport { Provider } from 'react-redux';\nimport { store } from '../../../config/redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\firebase\\index.js",[],"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\containers\\pages\\Login\\index.js",[],"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\containers\\pages\\Dashboard\\index.js",[],"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\containers\\pages\\Register\\index.js",["108"],"import React, { Component } from 'react';\r\nimport \"./register.scss\";\r\nimport firebase from '../../../config/firebase';\r\nimport Button from '../../../components/atoms/Button';\r\nimport { connect } from 'react-redux';\r\nimport { registerUserAPI } from '../../../config/redux/action';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        //console.log(e.target.id);\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    handleRegisterSubmit = () => {\r\n        const { email, password } = this.state;\r\n        console.log('before send: ', email, password);\r\n        this.props.registerAPI({ email, password });\r\n        this.setState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n        // firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        //     .then((res) => {\r\n        //         console.log('success: ', res);\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         var errorCode = error.code;\r\n        //         var errorMessage = error.message;\r\n        //         console.log(errorMessage, errorCode);\r\n        //     });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"regist-container\">\r\n                <div className=\"regist-card\">\r\n                    <p className=\"heading-card\">Register Page</p>\r\n                    <input className=\"input\" placeholder=\"Email\" id=\"email\" type=\"text\" onChange={this.handleChangeText} value={this.state.email} />\r\n                    <input className=\"input\" placeholder=\"Password\" id=\"password\" type=\"password\" onChange={this.handleChangeText} value={this.state.password} />\r\n                    {/* <button className=\"btn\" onClick={this.handleRegisterSubmit}>Register</button> */}\r\n                    <Button onClick={this.handleRegisterSubmit} title=\"Register\" loading={this.props.isLoading} />\r\n                </div>\r\n                {/* <button>go to dashboard</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n    isLoading: state.isLoading\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    registerAPI: (data) => dispatch(registerUserAPI(data))\r\n})\r\n\r\nexport default connect(reduxState, reduxDispatch)(Register);","J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\redux\\index.js",[],"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\redux\\store\\index.js",[],"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\redux\\reducer\\index.js",[],"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\config\\redux\\action\\index.js",[],"J:\\PROJECT\\REACTJS\\try-with-firebase\\src\\components\\atoms\\Button\\index.js",[],"D:\\try-with-firebase\\src\\index.js",[],["109","110"],"D:\\try-with-firebase\\src\\reportWebVitals.js",[],"D:\\try-with-firebase\\src\\config\\firebase\\index.js",[],"D:\\try-with-firebase\\src\\containers\\pages\\App\\index.js",[],"D:\\try-with-firebase\\src\\containers\\pages\\Dashboard\\index.js",[],"D:\\try-with-firebase\\src\\config\\redux\\index.js",[],"D:\\try-with-firebase\\src\\containers\\pages\\Login\\index.js",[],"D:\\try-with-firebase\\src\\containers\\pages\\Register\\index.js",["111"],"import React, { Component } from 'react';\r\nimport \"./register.scss\";\r\nimport firebase from '../../../config/firebase';\r\nimport Button from '../../../components/atoms/Button';\r\nimport { connect } from 'react-redux';\r\nimport { registerUserAPI } from '../../../config/redux/action';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        //console.log(e.target.id);\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    handleRegisterSubmit = async () => {\r\n        const { email, password } = this.state;\r\n        // console.log('before send: ', email, password);\r\n        const res = await this.props.registerAPI({ email, password }).catch(err => err);\r\n        if (res) {\r\n            this.setState({\r\n                email: '',\r\n                password: ''\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"regist-container\">\r\n                <div className=\"regist-card\">\r\n                    <p className=\"heading-card\">Register Page</p>\r\n                    <input className=\"input\" placeholder=\"Email\" id=\"email\" type=\"text\" onChange={this.handleChangeText} value={this.state.email} />\r\n                    <input className=\"input\" placeholder=\"Password\" id=\"password\" type=\"password\" onChange={this.handleChangeText} value={this.state.password} />\r\n                    {/* <button className=\"btn\" onClick={this.handleRegisterSubmit}>Register</button> */}\r\n                    <Button onClick={this.handleRegisterSubmit} title=\"Register\" loading={this.props.isLoading} />\r\n                </div>\r\n                {/* <button>go to dashboard</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n    isLoading: state.isLoading\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    registerAPI: (data) => dispatch(registerUserAPI(data))\r\n})\r\n\r\nexport default connect(reduxState, reduxDispatch)(Register);","D:\\try-with-firebase\\src\\config\\redux\\store\\index.js",[],"D:\\try-with-firebase\\src\\config\\redux\\action\\index.js",["112"],"import firebase, { database } from '../../../config/firebase';\r\n\r\n\r\nexport const actionUserName = () => (dispatch) => {\r\n    setTimeout(() => {\r\n        return dispatch({ type: 'CHANGE_USER', value: 'LUTFI HKIM' })\r\n    }, 3000)\r\n}\r\n\r\nexport const registerUserAPI = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({ type: 'CHANGE_LOADING', value: true })\r\n        firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n            .then((res) => {\r\n                console.log('success: ', res);\r\n                dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                resolve(true);\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log(errorMessage, errorCode);\r\n                dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                reject(false);\r\n            })\r\n    })\r\n}\r\n\r\nexport const loginUserAPI = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({ type: 'CHANGE_LOADING', value: true })\r\n        firebase.auth().signInWithEmailAndPassword(data.email, data.password)\r\n            .then(res => {\r\n                //console.log('success: ', res);\r\n                const dataUser = {\r\n                    email: res.user.email,\r\n                    uid: res.user.uid,\r\n                    emailVerified: res.user.emailVerified,\r\n                    refreshToken: res.user.refreshToken\r\n                }\r\n                console.log('success: ', dataUser);\r\n                dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                dispatch({ type: 'CHANGE_ISLOGIN', value: true })\r\n                dispatch({ type: 'CHANGE_USER', value: dataUser })\r\n                resolve(dataUser);\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log(errorCode, errorMessage);\r\n                dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                dispatch({ type: 'CHANGE_ISLOGIN', value: false })\r\n                reject(false);\r\n            })\r\n    })\r\n}\r\n\r\nexport const addDataToAPI = (data) => (dispatch) => {\r\n    database.ref('notes/' + data.userId).push({\r\n        title: data.title,\r\n        content: data.content,\r\n        date: data.date\r\n    })\r\n}\r\n\r\nexport const getDataFormAPI = (userId) => (dispatch) => {\r\n    const urlNotes = database.ref('notes/' + userId)\r\n    return new Promise((resolve, reject) => {\r\n        urlNotes.on('value', (snapshot) => {\r\n            console.log('data get: ', snapshot.val());\r\n            //menjadikan data array\r\n            const data = [];\r\n            Object.keys(snapshot.val()).map(key => {\r\n                data.push({\r\n                    id: key,\r\n                    data: snapshot.val()[key]\r\n                })\r\n            })\r\n            dispatch({ type: 'SET_NOTES', value: data })\r\n            resolve(snapshot.val())\r\n        });\r\n    })\r\n}\r\n\r\nexport const updateDataAPI = (data) => (dispatch) => {\r\n    const urlNotes = database.ref(`notes/${data.userId}/${data.noteId}`)\r\n    return new Promise((resolve, reject) => {\r\n        urlNotes.set({\r\n            title: data.title,\r\n            content: data.content,\r\n            date: data.date\r\n        }, (err) => {\r\n            if (err) {\r\n                reject(false);\r\n            } else {\r\n                resolve(true);\r\n            }\r\n        });\r\n    })\r\n}","D:\\try-with-firebase\\src\\components\\atoms\\Button\\index.js",[],"D:\\try-with-firebase\\src\\config\\redux\\reducer\\index.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":42,"nodeType":"119","messageId":"120","endLine":2,"endColumn":46},{"ruleId":"117","severity":1,"message":"121","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":16},{"ruleId":"113","replacedBy":"122"},{"ruleId":"115","replacedBy":"123"},{"ruleId":"117","severity":1,"message":"121","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":73,"column":49,"nodeType":"126","messageId":"127","endLine":73,"endColumn":51},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.",["128"],["129"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]